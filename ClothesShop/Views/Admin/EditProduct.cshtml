@model ClothesShop.Models.ProductModel

@{
    ViewBag.Title = "AddProduct";
}

<div id="adminMenu">
	@Html.Partial("AdminMenu")
</div>

<h2>AddProduct</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    IEnumerable<SelectListItem> subcategories = ((IEnumerable<ClothesShop.Models.SubcategoryModel>)ViewBag.SubCategories).Select(x => new SelectListItem() { Text = x.SubcategoryName, Value = x.ID.ToString() });
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>ProductModel</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.SubCategoryID)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.SubCategoryID, subcategories)
            @Html.ValidationMessageFor(model => model.SubCategoryID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Number)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Number)
            @Html.ValidationMessageFor(model => model.Number)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.NameEN)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.NameEN)
            @Html.ValidationMessageFor(model => model.NameEN)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DescriptionEN)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.DescriptionEN)
            @Html.ValidationMessageFor(model => model.DescriptionEN)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Price)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Price)
            @Html.ValidationMessageFor(model => model.Price)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Weight)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Weight)
            @Html.ValidationMessageFor(model => model.Weight)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Special)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Special)
            @Html.ValidationMessageFor(model => model.Special)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.QuantityType)
        </div>
        <div class="editor-field">
            @{
                string[] values = Enum.GetNames(typeof(ClothesShop.Models.QuantityType));
            }
            @Html.DropDownListFor(model => model.QuantityType, values.
            Select(x => new SelectListItem() { 
                Text = x, 
                Value = ((byte)Enum.Parse(typeof(ClothesShop.Models.QuantityType), x)).ToString(),
                Selected = (byte)Enum.Parse(typeof(ClothesShop.Models.QuantityType), x) == (byte)Model.QuantityType
            }))
            @Html.ValidationMessageFor(model => model.QuantityType)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Quantity)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Quantity)
            @Html.ValidationMessageFor(model => model.Quantity)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

            <script>
                $(document).ready(function () {
                    $("#Price").kendoNumericTextBox({ 
                        min: 0, 
                        format: "c",
                        decimals: 3
                    });
                    $("#Weight").kendoNumericTextBox({ min: 1 });
                    $("#Quantity").kendoNumericTextBox({ min: 1 });
                });
            </script>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
